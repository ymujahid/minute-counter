

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 12 19:14:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166                           
   167                           	psect	idataCOMMON
   168  07A8                     __pidataCOMMON:	
   169                           
   170                           ;initializer for _count
   171  07A8  3401               	retlw	1
   172  07A9  3400               	retlw	0
   173                           
   174                           	psect	strings
   175  0003                     __pstrings:	
   176  0003                     stringtab:	
   177  0003                     __stringtab:	
   178  0003                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181  0003                     stringdir:	
   182  0003  3000               	movlw	high stringdir
   183  0004  008A               	movwf	10
   184  0005  0804               	movf	4,w
   185  0006  0A84               	incf	4,f
   186  0007  0782               	addwf	2,f
   187  0008                     __stringbase:	
   188  0008  3400               	retlw	0
   189  0009                     __end_of__stringtab:	
   190  0009                     _SEGMENT_MAP:	
   191  0009  343F               	retlw	63
   192  000A  3406               	retlw	6
   193  000B  345B               	retlw	91
   194  000C  344F               	retlw	79
   195  000D  3466               	retlw	102
   196  000E  346D               	retlw	109
   197  000F  347D               	retlw	125
   198  0010  3407               	retlw	7
   199  0011  347F               	retlw	127
   200  0012  346F               	retlw	111
   201  0013                     __end_of_SEGMENT_MAP:	
   202  0009                     _PORTE	set	9
   203  0008                     _PORTD	set	8
   204  0007                     _PORTC	set	7
   205  0006                     _PORTB	set	6
   206  0005                     _PORTA	set	5
   207  0088                     _TRISD	set	136
   208  0087                     _TRISC	set	135
   209  0086                     _TRISB	set	134
   210                           
   211                           ; #config settings
   212  0000                     
   213                           	psect	cinit
   214  07F0                     start_initialization:	
   215  07F0                     __initialization:	
   216                           
   217                           ; Initialize objects allocated to COMMON
   218  07F0  120A  118A  27A8  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   219  07F5  00F3               	movwf	__pdataCOMMON& (0+127)
   220  07F6  120A  118A  27A9  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   221  07FB  00F4               	movwf	(__pdataCOMMON+1)& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:	
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	dataCOMMON
   230  0073                     __pdataCOMMON:	
   231  0073                     _count:	
   232  0073                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_main:	
   237  0070                     ??_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240                           
   241                           ; 1 bytes @ 0x0
   242  0070                     	ds	3
   243                           
   244                           	psect	maintext
   245  07AA                     __pmaintext:	
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 31 in file "minute-counter.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   260 ;; Tracked objects:
   261 ;;		On entry : B00/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   265 ;;      Params:         0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0
   267 ;;      Temps:          3       0       0       0       0
   268 ;;      Totals:         3       0       0       0       0
   269 ;;Total ram usage:        3 bytes
   270 ;; Hardware stack levels used:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		Startup code after reset
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           
   279                           ;psect for function _main
   280  07AA                     _main:	
   281  07AA                     l636:	
   282                           ;incstack = 0
   283                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   284                           
   285                           
   286                           ;minute-counter.c: 32:     PORTA = PORTB = PORTC = PORTD = PORTE = 0;
   287  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   288  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   289  07AC  0189               	clrf	9	;volatile
   290  07AD  0188               	clrf	8	;volatile
   291  07AE  0187               	clrf	7	;volatile
   292  07AF  0186               	clrf	6	;volatile
   293  07B0  0185               	clrf	5	;volatile
   294                           
   295                           ;minute-counter.c: 33:     TRISB = TRISC = TRISD = 0;
   296  07B1  1683               	bsf	3,5	;RP0=1, select bank1
   297  07B2  1303               	bcf	3,6	;RP1=0, select bank1
   298  07B3  0188               	clrf	8	;volatile
   299  07B4  0187               	clrf	7	;volatile
   300  07B5  0186               	clrf	6	;volatile
   301  07B6                     l638:	
   302                           
   303                           ;minute-counter.c: 35:         count++;
   304  07B6  3001               	movlw	1
   305  07B7  07F3               	addwf	_count,f
   306  07B8  1803               	skipnc
   307  07B9  0AF4               	incf	_count+1,f
   308  07BA  3000               	movlw	0
   309  07BB  07F4               	addwf	_count+1,f
   310  07BC                     l640:	
   311                           
   312                           ;minute-counter.c: 36:         PORTD = SEGMENT_MAP[0];
   313  07BC  3001               	movlw	low (_SEGMENT_MAP-__stringbase)
   314  07BD  0084               	movwf	4
   315  07BE  120A  118A  2003  120A  118A  	fcall	stringdir
   316  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   317  07C4  0088               	movwf	8	;volatile
   318  07C5                     l642:	
   319                           
   320                           ;minute-counter.c: 37:         PORTC = SEGMENT_MAP[count];
   321  07C5  0873               	movf	_count,w
   322  07C6  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   323  07C7  0084               	movwf	4
   324  07C8  120A  118A  2003  120A  118A  	fcall	stringdir
   325  07CD  0087               	movwf	7	;volatile
   326  07CE                     l644:	
   327                           
   328                           ;minute-counter.c: 38:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   329  07CE  301A               	movlw	26
   330  07CF  00F2               	movwf	??_main+2
   331  07D0  305E               	movlw	94
   332  07D1  00F1               	movwf	??_main+1
   333  07D2  306E               	movlw	110
   334  07D3  00F0               	movwf	??_main
   335  07D4                     u17:	
   336  07D4  0BF0               	decfsz	??_main,f
   337  07D5  2FD4               	goto	u17
   338  07D6  0BF1               	decfsz	??_main+1,f
   339  07D7  2FD4               	goto	u17
   340  07D8  0BF2               	decfsz	??_main+2,f
   341  07D9  2FD4               	goto	u17
   342  07DA  0000               	nop
   343  07DB                     l646:	
   344                           
   345                           ;minute-counter.c: 39:         PORTB = SEGMENT_MAP[count++];
   346  07DB  0873               	movf	_count,w
   347  07DC  3E01               	addlw	low ((_SEGMENT_MAP-__stringbase)| (0+32768))
   348  07DD  0084               	movwf	4
   349  07DE  120A  118A  2003  120A  118A  	fcall	stringdir
   350  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   351  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   352  07E5  0086               	movwf	6	;volatile
   353  07E6                     l648:	
   354  07E6  3001               	movlw	1
   355  07E7  07F3               	addwf	_count,f
   356  07E8  1803               	skipnc
   357  07E9  0AF4               	incf	_count+1,f
   358  07EA  3000               	movlw	0
   359  07EB  07F4               	addwf	_count+1,f
   360  07EC  2FB6               	goto	l638
   361  07ED  120A  118A  2800   	ljmp	start
   362  07F0                     __end_of_main:	
   363  007E                     btemp	set	126	;btemp
   364  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       5      12        0.0%
ABS                  0      0       5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 12 19:14:36 2020

                      pc 0002              __CFG_CP$OFF 0000                       u17 07D4  
                     fsr 0004                      l640 07BC                      l642 07C5  
                    l644 07CE                      l636 07AA                      l646 07DB  
                    l638 07B6                      l648 07E6             __CFG_CPD$OFF 0000  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 07AA                     btemp 007E  
                   start 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _count 0073  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0070           __CFG_PWRTE$OFF 0000             __pdataCOMMON 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07AA  
             __stringtab 0003     end_of_initialization 07FC            __pidataCOMMON 07A8  
    start_initialization 07F0                ___latbits 0002                __pstrings 0003  
    __end_of_SEGMENT_MAP 0013              __stringbase 0008       __end_of__stringtab 0009  
            _SEGMENT_MAP 0009            __size_of_main 0046                stringcode 0003  
               stringdir 0003                 stringtab 0003  
